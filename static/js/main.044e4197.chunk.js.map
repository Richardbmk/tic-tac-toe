{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","Squarender","React","Component","Game","state","xIsNext","stepNumber","history","Array","fill","step","setState","slice","length","calculateWinner","concat","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAKA,SAASA,EAAOC,GACd,OACE,4BACEC,UAAU,SACVC,QAASF,EAAME,SAEhBF,EAAMG,O,IAKLC,E,yKACOC,GAAI,IAAD,OACZ,OACE,kBAACN,EAAD,CACAI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMpC,OACE,6BACE,yBAAKJ,UAAU,SACZK,KAAKE,WAAW,GAChBF,KAAKE,WAAW,GAChBF,KAAKE,WAAW,IAEnB,yBAAKP,UAAU,SACZK,KAAKE,WAAW,GAChBF,KAAKE,WAAW,GAChBF,KAAKE,WAAW,IAEnB,yBAAKP,UAAU,SACZK,KAAKE,WAAW,GAChBF,KAAKE,WAAW,GAChBF,KAAKE,WAAW,S,GA1BPC,IAAMC,WAiCpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,SAAS,EACTC,WAAY,EACZC,QAAS,CACP,CAAER,QAASS,MAAM,GAAGC,KAAK,SANZ,E,mDAWZC,GACLZ,KAAKa,SAAS,CACZL,WAAYI,EACZL,QAAUK,EAAO,IAAO,M,kCAIhBb,GACV,IAAMU,EAAUT,KAAKM,MAAMG,QAAQK,MAAM,EAAGd,KAAKM,MAAME,WAAa,GAE9DP,EADUQ,EAAQA,EAAQM,OAAS,GACjBd,QAAQa,QACjBE,EAAgBf,IACjBA,EAAQF,KAGtBE,EAAQF,GAAKC,KAAKM,MAAMC,QAAU,IAAM,IACxCP,KAAKa,SAAS,CACZJ,QAASA,EAAQQ,OAAO,CACtBhB,QAASA,IAEXM,SAAUP,KAAKM,MAAMC,QACrBC,WAAYC,EAAQM,Y,+BAId,IAeJG,EAfG,OACDT,EAAUT,KAAKM,MAAMG,QACrBU,EAAUV,EAAQT,KAAKM,MAAME,YAC7BY,EAASJ,EAAgBG,EAAQlB,SACjCoB,EAAQZ,EAAQa,KAAI,SAACV,EAAMW,GAC/B,IAAMC,EAAOD,EAAO,UAAYA,EAAO,iBACvC,OACE,wBAAIE,IAAKF,GACP,4BAAQ3B,QAAU,WAAQ,EAAK8B,OAAOH,KACnCC,OAcT,OALEN,EADEE,EACO,aAAeA,EAEb,mBAAqBpB,KAAKM,MAAMC,QAAU,IAAM,KAI3D,yBAAKZ,UAAU,QACb,yBAAKA,UAAU,SACb,kBAACG,EAAD,CACEF,QAAU,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,IAClCE,QAAUkB,EAAQlB,WAGtB,yBAAKN,UAAU,aACb,6BAAMuB,GACN,6BAAMG,S,GAtEGlB,IAAMC,WAsFzB,SAASY,EAAgBf,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMb,OAAQhB,IAAK,CAAC,IAAD,cACnB6B,EAAM7B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,W","file":"static/js/main.044e4197.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      onClick={props.onClick}\r\n    >\r\n    {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  Squarender(i) {\r\n    return(\r\n      <Square \r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"board\">\r\n          {this.Squarender(0)}  \r\n          {this.Squarender(1)}  \r\n          {this.Squarender(2)}  \r\n        </div>\r\n        <div className=\"board\">\r\n          {this.Squarender(3)}  \r\n          {this.Squarender(4)}  \r\n          {this.Squarender(5)}  \r\n        </div>\r\n        <div className=\"board\">\r\n          {this.Squarender(6)}  \r\n          {this.Squarender(7)}  \r\n          {this.Squarender(8)}  \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      history: [\r\n        { squares: Array(9).fill(null) }\r\n      ]\r\n    }\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    })\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const winner = calculateWinner(squares);\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat({\r\n        squares: squares\r\n      }),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Go to #' + move : 'Start the Game';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={ () => { this.jumpTo(move) }}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      )\r\n    });\r\n\r\n    let status;\r\n\r\n    if (winner) {\r\n      status = 'Winner is ' + winner;\r\n    } else {\r\n        status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"board\">\r\n          <Board \r\n            onClick={ (i) => this.handleClick(i) }\r\n            squares={ current.squares } \r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <div>{moves}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}